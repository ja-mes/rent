continue
@inovicerake
old_amount.to_s
old_amount
@customer.balance.to_s
continue
@customer.balance.to_s
continue
rake
continue
@customer.balance = -300
@customer.balance < -301
@customer.balance < -400
@customer.balance < -300
@customer.balance < -205
@customer.balance < -201
@customer.balance < -500
@customer.balance < -200
@customer.balance < -0.3
@customer.balance > -0.3
@customer.balance == -0.3
@customer.balance == -200
@customer.balance
continue
@customer.balance == 0.0
@customer.balance
continue
assigns(:invoice).amount == 200
assigns(:invoice).amount
assigns(:invoice.amount)
@invoice.amount
continue
assigns(:customer).balance < 0
assigns(:customer).balance
continue
assigns(:customer).balance
assigns(:customer).balance < 0
assigns(:customer).balance
assigns(:customer).balance == 0
assigns(:customer).balance > 0
assigns(:customer).balance == 500
assigns(:customer).balance == 123
assigns(:customer)
continue
customers(:one)
continue
@customer
continue
back
customers(:one).balance == 500
continue
@customer.balance == 500
continue
@customer.balance == 500
@invoice.customer
continue
@customer.balance == 500
@customer.balance
@customer
continue
rake
assert_equal customers(:one).balance, 0
customers(:one).balance == 0
customers(:one).balance == 500
customers(:one).balance
customers(:one)
continue
assert_equal customers(:one).balance, 0.00
customers(:one).balance == 0.00
customers(:one)
continue
@invoice.amount
continue
@payment.transaction
@payment.transactions
@payment.transactionable
@payment
continue
@transaction.first
@transaction.date
@transaction.hdate
@transaction
continue
@payment.transactions
@payment.transaction
continue
@payment.transactions
@payment
@transaction
rake
clear
continue
@customer
@invoice
continue
@transactions.each do |f| puts f end
@transactions.each do |f|
@transactions
continue
@transactions
continue
@payment
continue
@payment
params
@payment
continue
obj
continue
@payment.date
continue
obj.date
obj
continue
@transactions
continue
payment_params[:date]
nil.blank?
@payment
continue
@payment.date
continue
Date.strptime(payment_params[:date], "%m/%d/%Y")
Date.strptime("12/22/2011", "%m/%d/%Y")
Date.parse payment_params[:date]
payment_params[:date].to_date
payment_params[:date]
continue
payment_params[:date]
continue
params
params["date"]
payment_params["date"]
payment_params.date
payment_params
customer_params
params.date
params[:date]
params
continue
params[:amount]
params[:date]
continue
params[:date]
params
continue
Property.second.id
Property.second.user.id
Property.last.user.id
current_user.id
Property.last.id
Property.last.user == current_user
Property.last.user
Property.all
@property.user == current_user
@property.user
@property
continue
current_user.properties.join
current_user
@properties
$properties
continue
@properties
@properties.first
@properties
@properties.all
@properties
continue
@properties
continue
@properties.empty?
@properties
continue
customer_params[:property_id]
customer_params.property_id
customer_params
params[:property]
params
params[:property_id]
params[:property_id
continue
action
controller
continue
action
controller
continue
action
controller
params
continue
params
controller
action
continue
params[:action]
