continue
assigns(:deposit).payments
continue
9.99 - payment2.amont
9.99 - payment2.amount.to_s
9.99 - payment2.amount
continue
9.99-payment2.amount
9.99-5
@deposit.amount.to_s
@deposit.amount
continue
payment.amount.to_s
deposit.amount.to_s
@deposit.amount.to_s
payment2.amount.to_s
payment2.amount.to_S
payment2.amount
continue
@payments
@deposit.payments
@deposit
continue
rake
@deposit.payments.first.amount.to_s
@deposit.payments.first.amount
@deposit.payments.count
@deposit.payments
@deposit.date
@deposit
@account
continue
payment.tran
payment
continue
payment.id
continue
deposit.amount.to_s
deposit.amount
continue
deposit.amount.to_s
deposit.amount
@deposit.amount
(payment.amount + payment2.amount).to_s
payment.amount + payment2.amount
payment.amount + payment2.amount.to_s
payment.amount.to_s
continue
self.tran
continue
self.tran
self
debugger
continue
rake
payment2.valid?
payment
payment1
payment2
continue
p
continue
@payments
continue
@payments
continue
users(:one)
current_user
@payments
continue
@payments
payment_params
deposit_params
continue
payment_params
continue
payment_params
continue
payment_params
params
continue
Payment.where(user: users(:one), deposit: nil).count
Payment.where(deposit: nil).count
Payment.where(deposit: nil)
Payments.where(:deposit, nil)
assigns(:payments)
continue
account.balance.to_s
account.balance
continue
self.amount.to_s
self.valid?
self
self.
continue
check.valid?
check.valid
continue
check.errors.full_messages
check.errors.full_messages?
check.valid?
continue
check.tran
check
continue
self.amount
continue
@deposit.amount
continue
self.amount.to_s
self.amount
account.balance.to_s
account
continue
@deposit.valid?
continue
@deposit.valid?
continue
@payments
payment_params
@deposit
continue
payment_params[:payment].key?(p.id.to_s)
payment_params[:payment]
payment_params
continue
@deposit.date
continue
@deposit
@payments
continue
params[:deposit][:date]
params
params[:date]
deposit_params[:date]
@deposit.date
@deposit
continue
amount.to_s
continue
amount.to_s
amount
continue
@payments
@payment
continue
@trans
trans
continue
tran.valid?
tran.valid
continue
tran.errors.full_messages
tran.valid?
tran
continue
deposit_params
deposit_parmas
continue
@deposit
continue
@account.payments.where(id: deposit_params[:payment]).count
@account.payments.where(id: deposit_params[:payment]).cont
@account.payments.where(id: deposit_params[:payment])
@account.payments.find_all_by_id(deposit_params[:payment])
@account.payments.find_all_by_id(deposit_params[:payment)
@account.payments
deposit_params
continue
deposit_params
params
parmas
deposit_params
deposit_params[:payment]
continue
@account.payments.where(id: deposit_params[:payment].key?(p.id.to_s))
@account.payments.where(id: 3)
@account.payments.where(id: 4)
@account.payments
continue
deposit_params[:payment].key?(p.id.to_s)
deposit_params[:payment]
deposit_params.payment
deposit_params
continue
params[:deposit][:payment].key?(p.id.to_s)
continue
params[:deposit][:payment].key?(p.id.to_s)
params[:deposit][:payment].key?(p.id)
p.id
params[:deposit][:payment]
params[:deposit]
params[:deposit].key?(p.id.to_s)
continue
params[:deposit].key?(p.id.to_s)
params[:deposit].key?(p.id)
p.id
continue
params
continue
params
continue
params[:deposit]
continue
params[:deposit][:payment]
params
continue
params
continue
params
continue
params
continue
params
continue
@payments.count
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
@deposit
continue
@check.date
continue
rake
@check.date
check_params
check_params[:date]
continue
@tran.errors
@tran.valid?
@tran.errors.full_messages
@account.errors.full_messages
continue
account.balance.to_s
account.balance
account.reload
account.balance
account
continue
accounts(:four).balance.to_s
accounts(:one).balance.to_s
check.amount.to_s
check.amount
continue
