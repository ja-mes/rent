continue
check.valid?
check.valid
continue
check.errors.full_messages
check.errors.full_messages?
check.valid?
continue
check.tran
check
continue
self.amount
continue
@deposit.amount
continue
self.amount.to_s
self.amount
account.balance.to_s
account
continue
@deposit.valid?
continue
@deposit.valid?
continue
@payments
payment_params
@deposit
continue
payment_params[:payment].key?(p.id.to_s)
payment_params[:payment]
payment_params
continue
@deposit.date
continue
@deposit
@payments
continue
params[:deposit][:date]
params
params[:date]
deposit_params[:date]
@deposit.date
@deposit
continue
amount.to_s
continue
amount.to_s
amount
continue
@payments
@payment
continue
@trans
trans
continue
tran.valid?
tran.valid
continue
tran.errors.full_messages
tran.valid?
tran
continue
deposit_params
deposit_parmas
continue
@deposit
continue
@account.payments.where(id: deposit_params[:payment]).count
@account.payments.where(id: deposit_params[:payment]).cont
@account.payments.where(id: deposit_params[:payment])
@account.payments.find_all_by_id(deposit_params[:payment])
@account.payments.find_all_by_id(deposit_params[:payment)
@account.payments
deposit_params
continue
deposit_params
params
parmas
deposit_params
deposit_params[:payment]
continue
@account.payments.where(id: deposit_params[:payment].key?(p.id.to_s))
@account.payments.where(id: 3)
@account.payments.where(id: 4)
@account.payments
continue
deposit_params[:payment].key?(p.id.to_s)
deposit_params[:payment]
deposit_params.payment
deposit_params
continue
params[:deposit][:payment].key?(p.id.to_s)
continue
params[:deposit][:payment].key?(p.id.to_s)
params[:deposit][:payment].key?(p.id)
p.id
params[:deposit][:payment]
params[:deposit]
params[:deposit].key?(p.id.to_s)
continue
params[:deposit].key?(p.id.to_s)
params[:deposit].key?(p.id)
p.id
continue
params
continue
params
continue
params[:deposit]
continue
params[:deposit][:payment]
params
continue
params
continue
params
continue
params
continue
params
continue
@payments.count
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
@deposit
continue
@check.date
continue
rake
@check.date
check_params
check_params[:date]
continue
@tran.errors
@tran.valid?
@tran.errors.full_messages
@account.errors.full_messages
continue
account.balance.to_s
account.balance
account.reload
account.balance
account
continue
accounts(:four).balance.to_s
accounts(:one).balance.to_s
check.amount.to_s
check.amount
continue
checks(:one)
continue
check.errors
continue
check.errors.full_messages
check.valid?
check.save
check
continue
params[:customer][:deposit]
params[:customer]
continue
params[:customer]
continue
amount
amoutn
continue
params[:customer][:deposit]
params
params[:deposit]
params[:deposit
continue
customer_params
deposit
continue
customer_params
customer_params.deposit
rake
continue
rake
invoice_tran
invoice
invoice.id
invoice_tran
continue
invoice.errors.full_messages
invoice.valid?
invoice.valid/
invoice
invoice_tran
continue
rake
invoice
ivnocie
invoice_tran
continue
@customer.errors.full_messages
continue
rake
Account.all
Account.where(name: "Rental Income")
Account.find_by(name: "Rental Income")
Account.find_by(name: "Rental Income"
self.user
continue
params
params[:invoice]
invoice_params
continue
properties(:four).customers.first
properties(:four).customers
properties(:four).customer
properties(:four)
continue
post: create, customer_id: customers(:one), invoice: {rake
post: create, customer_id: customers(:one), invoice: { \
post: create, customer_id: customers(:one), invoice: {
accounts(:one).id
accounts(:one)
continue
invoice_params
continue
@invoice.invoice_trans
continue
self.invoice.invoice_trans.length
self.invoice.invoice_trans
self
continue
params[:invoice]
continue
params[:invoice]
continue
params[:invoice]
@invoice.invoice_trans
continue
InvoiceTran.all
InvoiceTrans.all
continue
tran.user_id
tran.user_id = current_user.id
current_user
tran.user_id
tran.user_id = current_user
tran
